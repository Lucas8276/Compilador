// che_rumba.lark  (versión 3 – comentarios ignorados)

%import common.CNAME            -> IDENT
%import common.NUMBER
%import common.WS
%import common.ESCAPED_STRING   -> STRING
%ignore WS

COMMENT: /[ \t]*Che[^\n]*/      // <--- Cambia a mayúsculas y ponlo aquí
%ignore COMMENT                 // <--- Esto debe ir después de la definición

// ---------- TOKENS ----------
OP: "+" | "-" | "*" | "/" | ">" | "<" | ">=" | "<=" | "==" | "!="

// ---------- REGLAS ----------
program: statement*

?statement: var_decl
          | func_def
          | print_stmt
          | if_stmt
          | elif_stmt
          | else_stmt
          | for_stmt
          | while_stmt
          | dowhile_stmt
          | break_stmt
          | import_stmt
          | continue_stmt
          | return_stmt
          | reassign


var_decl:   "Parce" IDENT "=" expr
func_def: "Quilombo" IDENT "(" [params] ")" block
params: IDENT ("," IDENT)*
print_stmt: "Pilas" "(" STRING ("," expr)* ")"
if_stmt: "Pues" "(" expr ")" block
       | "Pues" expr block
else_stmt:  "Orale" block
elif_stmt: "Orale" "pues" "(" expr ")" block
         | "Orale" "pues" expr block
for_stmt:   "Boliche" IDENT "in" NUMBER block
while_stmt: "Rumba" expr block
dowhile_stmt: "Previa" block "Rumba" "(" expr ")"
break_stmt: "Paila"
import_stmt: "Labura" STRING
continue_stmt: "Andale"
return_stmt: "Volve" expr
reassign: IDENT "=" expr




block: "{" statement* "}"

?expr: expr OP term   -> bin_expr
     | term
     

?term: NUMBER         -> number
     | IDENT          -> var
     | "(" expr ")"
     | "Posta"        -> true
     | "Niahi"       -> false
     | "Guita" "(" STRING ")"    -> guita_read

